/*
 * Conduit REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.conduit.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Type shows the parameter type.   - TYPE_STRING: Parameter is a string.  - TYPE_INT: Parameter is an integer.  - TYPE_FLOAT: Parameter is a float.  - TYPE_BOOL: Parameter is a boolean.  - TYPE_FILE: Parameter is a file.  - TYPE_DURATION: Parameter is a duration.
 */
@JsonAdapter(Configv1ParameterType.Adapter.class)
public enum Configv1ParameterType {
  
  UNSPECIFIED("TYPE_UNSPECIFIED"),
  
  STRING("TYPE_STRING"),
  
  INT("TYPE_INT"),
  
  FLOAT("TYPE_FLOAT"),
  
  BOOL("TYPE_BOOL"),
  
  FILE("TYPE_FILE"),
  
  DURATION("TYPE_DURATION");

  private String value;

  Configv1ParameterType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static Configv1ParameterType fromValue(String text) {
    for (Configv1ParameterType b : Configv1ParameterType.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<Configv1ParameterType> {
    @Override
    public void write(final JsonWriter jsonWriter, final Configv1ParameterType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public Configv1ParameterType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return Configv1ParameterType.fromValue(String.valueOf(value));
    }
  }
}


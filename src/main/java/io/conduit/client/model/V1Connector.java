/*
 * Conduit REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.conduit.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.conduit.client.model.ConnectorDestinationState;
import io.conduit.client.model.ConnectorSourceState;
import io.conduit.client.model.V1ConnectorConfig;
import io.conduit.client.model.V1ConnectorType;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * V1Connector
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-03-13T16:13:27.395+01:00")
public class V1Connector {
  @SerializedName("id")
  private String id = null;

  @SerializedName("destinationState")
  private ConnectorDestinationState destinationState = null;

  @SerializedName("sourceState")
  private ConnectorSourceState sourceState = null;

  @SerializedName("config")
  private V1ConnectorConfig config = null;

  @SerializedName("type")
  private V1ConnectorType type = null;

  @SerializedName("plugin")
  private String plugin = null;

  @SerializedName("pipelineId")
  private String pipelineId = null;

  @SerializedName("processorIds")
  private List<String> processorIds = null;

  @SerializedName("createdAt")
  private OffsetDateTime createdAt = null;

  @SerializedName("updatedAt")
  private OffsetDateTime updatedAt = null;

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public V1Connector destinationState(ConnectorDestinationState destinationState) {
    this.destinationState = destinationState;
    return this;
  }

   /**
   * Get destinationState
   * @return destinationState
  **/
  @ApiModelProperty(value = "")
  public ConnectorDestinationState getDestinationState() {
    return destinationState;
  }

  public void setDestinationState(ConnectorDestinationState destinationState) {
    this.destinationState = destinationState;
  }

  public V1Connector sourceState(ConnectorSourceState sourceState) {
    this.sourceState = sourceState;
    return this;
  }

   /**
   * Get sourceState
   * @return sourceState
  **/
  @ApiModelProperty(value = "")
  public ConnectorSourceState getSourceState() {
    return sourceState;
  }

  public void setSourceState(ConnectorSourceState sourceState) {
    this.sourceState = sourceState;
  }

  public V1Connector config(V1ConnectorConfig config) {
    this.config = config;
    return this;
  }

   /**
   * Get config
   * @return config
  **/
  @ApiModelProperty(value = "")
  public V1ConnectorConfig getConfig() {
    return config;
  }

  public void setConfig(V1ConnectorConfig config) {
    this.config = config;
  }

  public V1Connector type(V1ConnectorType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public V1ConnectorType getType() {
    return type;
  }

  public void setType(V1ConnectorType type) {
    this.type = type;
  }

  public V1Connector plugin(String plugin) {
    this.plugin = plugin;
    return this;
  }

   /**
   * Get plugin
   * @return plugin
  **/
  @ApiModelProperty(value = "")
  public String getPlugin() {
    return plugin;
  }

  public void setPlugin(String plugin) {
    this.plugin = plugin;
  }

  public V1Connector pipelineId(String pipelineId) {
    this.pipelineId = pipelineId;
    return this;
  }

   /**
   * Get pipelineId
   * @return pipelineId
  **/
  @ApiModelProperty(value = "")
  public String getPipelineId() {
    return pipelineId;
  }

  public void setPipelineId(String pipelineId) {
    this.pipelineId = pipelineId;
  }

   /**
   * Get processorIds
   * @return processorIds
  **/
  @ApiModelProperty(value = "")
  public List<String> getProcessorIds() {
    return processorIds;
  }

  public V1Connector createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public V1Connector updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1Connector v1Connector = (V1Connector) o;
    return Objects.equals(this.id, v1Connector.id) &&
        Objects.equals(this.destinationState, v1Connector.destinationState) &&
        Objects.equals(this.sourceState, v1Connector.sourceState) &&
        Objects.equals(this.config, v1Connector.config) &&
        Objects.equals(this.type, v1Connector.type) &&
        Objects.equals(this.plugin, v1Connector.plugin) &&
        Objects.equals(this.pipelineId, v1Connector.pipelineId) &&
        Objects.equals(this.processorIds, v1Connector.processorIds) &&
        Objects.equals(this.createdAt, v1Connector.createdAt) &&
        Objects.equals(this.updatedAt, v1Connector.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, destinationState, sourceState, config, type, plugin, pipelineId, processorIds, createdAt, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1Connector {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    destinationState: ").append(toIndentedString(destinationState)).append("\n");
    sb.append("    sourceState: ").append(toIndentedString(sourceState)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    plugin: ").append(toIndentedString(plugin)).append("\n");
    sb.append("    pipelineId: ").append(toIndentedString(pipelineId)).append("\n");
    sb.append("    processorIds: ").append(toIndentedString(processorIds)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


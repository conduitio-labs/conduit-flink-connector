/*
 * Conduit REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.conduit.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * PipelineDLQ
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-03-13T16:13:27.395+01:00")
public class PipelineDLQ {
  @SerializedName("plugin")
  private String plugin = null;

  @SerializedName("settings")
  private Map<String, String> settings = null;

  @SerializedName("windowSize")
  private String windowSize = null;

  @SerializedName("windowNackThreshold")
  private String windowNackThreshold = null;

  public PipelineDLQ plugin(String plugin) {
    this.plugin = plugin;
    return this;
  }

   /**
   * Get plugin
   * @return plugin
  **/
  @ApiModelProperty(value = "")
  public String getPlugin() {
    return plugin;
  }

  public void setPlugin(String plugin) {
    this.plugin = plugin;
  }

  public PipelineDLQ settings(Map<String, String> settings) {
    this.settings = settings;
    return this;
  }

  public PipelineDLQ putSettingsItem(String key, String settingsItem) {
    if (this.settings == null) {
      this.settings = new HashMap<String, String>();
    }
    this.settings.put(key, settingsItem);
    return this;
  }

   /**
   * Get settings
   * @return settings
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getSettings() {
    return settings;
  }

  public void setSettings(Map<String, String> settings) {
    this.settings = settings;
  }

  public PipelineDLQ windowSize(String windowSize) {
    this.windowSize = windowSize;
    return this;
  }

   /**
   * Get windowSize
   * @return windowSize
  **/
  @ApiModelProperty(value = "")
  public String getWindowSize() {
    return windowSize;
  }

  public void setWindowSize(String windowSize) {
    this.windowSize = windowSize;
  }

  public PipelineDLQ windowNackThreshold(String windowNackThreshold) {
    this.windowNackThreshold = windowNackThreshold;
    return this;
  }

   /**
   * Get windowNackThreshold
   * @return windowNackThreshold
  **/
  @ApiModelProperty(value = "")
  public String getWindowNackThreshold() {
    return windowNackThreshold;
  }

  public void setWindowNackThreshold(String windowNackThreshold) {
    this.windowNackThreshold = windowNackThreshold;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PipelineDLQ pipelineDLQ = (PipelineDLQ) o;
    return Objects.equals(this.plugin, pipelineDLQ.plugin) &&
        Objects.equals(this.settings, pipelineDLQ.settings) &&
        Objects.equals(this.windowSize, pipelineDLQ.windowSize) &&
        Objects.equals(this.windowNackThreshold, pipelineDLQ.windowNackThreshold);
  }

  @Override
  public int hashCode() {
    return Objects.hash(plugin, settings, windowSize, windowNackThreshold);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PipelineDLQ {\n");
    
    sb.append("    plugin: ").append(toIndentedString(plugin)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("    windowSize: ").append(toIndentedString(windowSize)).append("\n");
    sb.append("    windowNackThreshold: ").append(toIndentedString(windowNackThreshold)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * Conduit REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.conduit.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.conduit.client.model.ProcessorParent;
import io.conduit.client.model.V1ProcessorConfig;
import java.io.IOException;

/**
 * V1CreateProcessorRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-03-13T16:13:27.395+01:00")
public class V1CreateProcessorRequest {
  @SerializedName("type")
  private String type = null;

  @SerializedName("parent")
  private ProcessorParent parent = null;

  @SerializedName("config")
  private V1ProcessorConfig config = null;

  @SerializedName("condition")
  private String condition = null;

  @SerializedName("plugin")
  private String plugin = null;

  public V1CreateProcessorRequest type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public V1CreateProcessorRequest parent(ProcessorParent parent) {
    this.parent = parent;
    return this;
  }

   /**
   * Get parent
   * @return parent
  **/
  @ApiModelProperty(value = "")
  public ProcessorParent getParent() {
    return parent;
  }

  public void setParent(ProcessorParent parent) {
    this.parent = parent;
  }

  public V1CreateProcessorRequest config(V1ProcessorConfig config) {
    this.config = config;
    return this;
  }

   /**
   * Get config
   * @return config
  **/
  @ApiModelProperty(value = "")
  public V1ProcessorConfig getConfig() {
    return config;
  }

  public void setConfig(V1ProcessorConfig config) {
    this.config = config;
  }

  public V1CreateProcessorRequest condition(String condition) {
    this.condition = condition;
    return this;
  }

   /**
   * Get condition
   * @return condition
  **/
  @ApiModelProperty(value = "")
  public String getCondition() {
    return condition;
  }

  public void setCondition(String condition) {
    this.condition = condition;
  }

  public V1CreateProcessorRequest plugin(String plugin) {
    this.plugin = plugin;
    return this;
  }

   /**
   * Get plugin
   * @return plugin
  **/
  @ApiModelProperty(value = "")
  public String getPlugin() {
    return plugin;
  }

  public void setPlugin(String plugin) {
    this.plugin = plugin;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1CreateProcessorRequest v1CreateProcessorRequest = (V1CreateProcessorRequest) o;
    return Objects.equals(this.type, v1CreateProcessorRequest.type) &&
        Objects.equals(this.parent, v1CreateProcessorRequest.parent) &&
        Objects.equals(this.config, v1CreateProcessorRequest.config) &&
        Objects.equals(this.condition, v1CreateProcessorRequest.condition) &&
        Objects.equals(this.plugin, v1CreateProcessorRequest.plugin);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, parent, config, condition, plugin);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1CreateProcessorRequest {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    condition: ").append(toIndentedString(condition)).append("\n");
    sb.append("    plugin: ").append(toIndentedString(plugin)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


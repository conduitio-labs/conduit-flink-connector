/*
 * Conduit REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.conduit.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Operation defines what triggered the creation of a record.   - OPERATION_CREATE: Records with operation create contain data of a newly created entity.  - OPERATION_UPDATE: Records with operation update contain data of an updated entity.  - OPERATION_DELETE: Records with operation delete contain data of a deleted entity.  - OPERATION_SNAPSHOT: Records with operation snapshot contain data of a previously existing entity, fetched as part of a snapshot.
 */
@JsonAdapter(Opencdcv1Operation.Adapter.class)
public enum Opencdcv1Operation {
  
  UNSPECIFIED("OPERATION_UNSPECIFIED"),
  
  CREATE("OPERATION_CREATE"),
  
  UPDATE("OPERATION_UPDATE"),
  
  DELETE("OPERATION_DELETE"),
  
  SNAPSHOT("OPERATION_SNAPSHOT");

  private String value;

  Opencdcv1Operation(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static Opencdcv1Operation fromValue(String text) {
    for (Opencdcv1Operation b : Opencdcv1Operation.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<Opencdcv1Operation> {
    @Override
    public void write(final JsonWriter jsonWriter, final Opencdcv1Operation enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public Opencdcv1Operation read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return Opencdcv1Operation.fromValue(String.valueOf(value));
    }
  }
}


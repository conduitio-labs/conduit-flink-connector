/*
 * Conduit REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.conduit.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Deprecated: use config.v1.Parameter.Type instead.   - TYPE_STRING: Parameter is a string.  - TYPE_INT: Parameter is an integer.  - TYPE_FLOAT: Parameter is a float.  - TYPE_BOOL: Parameter is a boolean.  - TYPE_FILE: Parameter is a file.  - TYPE_DURATION: Parameter is a duration.
 */
@JsonAdapter(V1PluginSpecificationsParameterType.Adapter.class)
public enum V1PluginSpecificationsParameterType {
  
  UNSPECIFIED("TYPE_UNSPECIFIED"),
  
  STRING("TYPE_STRING"),
  
  INT("TYPE_INT"),
  
  FLOAT("TYPE_FLOAT"),
  
  BOOL("TYPE_BOOL"),
  
  FILE("TYPE_FILE"),
  
  DURATION("TYPE_DURATION");

  private String value;

  V1PluginSpecificationsParameterType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static V1PluginSpecificationsParameterType fromValue(String text) {
    for (V1PluginSpecificationsParameterType b : V1PluginSpecificationsParameterType.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<V1PluginSpecificationsParameterType> {
    @Override
    public void write(final JsonWriter jsonWriter, final V1PluginSpecificationsParameterType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public V1PluginSpecificationsParameterType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return V1PluginSpecificationsParameterType.fromValue(String.valueOf(value));
    }
  }
}

